<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Massimo Caliman's</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://massimocaliman.it/feed.xml" />
<link rel="alternate" type="text/html" href="http://massimocaliman.it" />
<updated>2016-09-02T14:29:15+02:00</updated>
<id>http://massimocaliman.it/</id>
<author>
  <name>Massimo Caliman</name>
  <uri>http://massimocaliman.it/</uri>
  <email>mcaliman@gmail.com</email>
</author>


  

<entry>
  <title type="html"><![CDATA[Big Data, Data Science, Database i fondamentali 2]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/bigdata_datascience_database_i_fondamentali_2/" />
  <id>http://massimocaliman.it/articles/bigdata_datascience_database_i_fondamentali_2</id>
  <published>2016-06-02T00:45:33+02:00</published>
  <updated>2016-06-02T00:45:33+02:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    
&lt;p&gt;Prima dei DBMS come si faceva? O meglio come si fa ancora in molte sistemi ancora in uso? La parte del re la facevano i sistemi operativi, le applicazioni salvano su file, in un qualche formato, spesso proprietario,e una o più applicazioni dedicate si occupavano di leggere,scrivere,modificare e cancellare i dati. La cosa tutto sommato funzionava bene se tutto risiedeva su una sola macchina e non doveva comunicare con il resto del mondo, cioè quando non vi erano problemi di accesso concorrente ai dati. In generale i problemi erano di ridondanza,inconsistenza,difficoltà di accesso ai dati,accesso concorrente e protezione dei dati.&lt;/p&gt;

&lt;p&gt;I sistemi DBMS hanno risolto questi problemi permettendo una rappresentazione dei dati centralizzata e condivisa.&lt;/p&gt;

&lt;p&gt;Quando si parla di BigData si parla, anche, di database non relazionali NRDBMS o NoSQL, senza schema, ma esattamente come possiamo definire lo schema o schema logico di una database? Come la descrizione della struttura della base di dati, un astrazione al alto livello detto modello dei dati. Lo schema non ci dice cosa contiene la base di dati ma come è fatta astraendo l’implementazione usando un qualche formalismo ad alto livello, per esempio lo schema di una base di dati di una rubrica telefonica potrebbe essere descritta come: nome (stringa di 30),cognome(stringa di 30),telefono(intero di 20)&lt;/p&gt;

&lt;p&gt;E quando vogliamo riferirci ai dati e non alla struttura? In tale caso parliamo di istanza della base di dati, cioè insieme dei dati in dato momento, dato che le basi di dati variano nel tempo a seguito di inserimenti,modifiche e cancellazioni.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/bigdata_datascience_database_i_fondamentali_2/&quot;&gt;Big Data, Data Science, Database i fondamentali 2&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on June 02, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Big Data, Data Science, Database i fondamentali 1]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/bigdata_datascience_database_i_fondamentali_1/" />
  <id>http://massimocaliman.it/articles/bigdata_datascience_database_i_fondamentali_1</id>
  <published>2016-05-02T00:45:33+02:00</published>
  <updated>2016-05-02T00:45:33+02:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    
&lt;p&gt;Quando si parla di Big Data si parla di un evoluzione delle basi di dati, ma in grande o meglio si parla di una raccolta di dati così estesa in termini di volume, velocità e varietà da richiedere tecnologie e metodi analitici specifici per l’estrazione di valore.&lt;/p&gt;

&lt;p&gt;Questa è la definizione che possiamo trovare da una superficiale ricerca in rete. Potremmo avere a che fare con Big Data anche se la caratteristica fosse solo la varietà o la velocità.&lt;/p&gt;

&lt;p&gt;Il Data Scientist, cioè colui che ha una preparazione in Data Science si occupa di analizzare, interpretare dati, e sopratutto deve saperli recuperare e “ripulire” o “preparare” per l’analisi.&lt;/p&gt;

&lt;p&gt;Per muoversi in questo ambito a mio parere è imprescindibile un avere una classica formazione sulle basi di dati, rivediamo qualche concetto di base&lt;/p&gt;

&lt;p&gt;Abbiamo detto che i Big Data sono basi di dati cresciute un po’ troppo, o che comunque hanno almeno una delle tre V viste sopra (volume,velocità,varietà), ma una base di dati a cosa serve? A mettere le informazioni da qualche parte in modo che sia facile e veloce recuperarle in seguito.&lt;/p&gt;

&lt;p&gt;Il motivo di renderle recuperabili in futuro è semplice: le informazioni insieme alle persone,il denaro i materiali e gli immobili costituiscono il patrimonio delle risorse di ogni organizzazione, dove organizzazione è inteso nel senso più ampio possibile.&lt;/p&gt;

&lt;p&gt;Per gestire le informazioni abbiamo bisogno di qualcosa che le contenga e le gestisca permettendoci di accedervi e manipolarle, questo qualcosa è il ben conosciuto sistema informativo i cui compiti sono appunto quelli di raccogliere,conservare,elaborare,trasformare,distribuire le informazioni. Normalmente utilizzano come sinonimi sistema informatico e sistema informativo, il motivo è semplice, oggi i sistemi informativi sono quasi tutti sistemi informatici, realizzati tramite un sistema informatico, la ma definizione che ne abbiamo dato è indipendente dall’automazione. Avete presente il sistema di classificazione e indicizzazione dei libri nelle biblioteche di una volta?Quello è un sistema informativo, non informatico.&lt;/p&gt;

&lt;p&gt;Fino ad ora abbiamo parlato di informazioni, ma cosa sono realmente le informazioni? e i dati? Lasciamo perdere i bit per un momento e affidiamoci ai dizionari o quantomeno a wikipedia.&lt;/p&gt;

&lt;p&gt;Le informazioni per prima cosa devono essere qualcosa di utile e comprensibile, un qualcosa che produce una variazione nel patrimonio cognitivo di un soggetto detto percettore dell’informazione.&lt;/p&gt;

&lt;p&gt;Se chiedo via mail ad un amico che sta in Cina per un soggiorno di studio che tempo fa li e lui mi risponde usando i caratteri cinesi e io non conosco il cinese non ho nessuna variazione nel mio patrimonio cognitivo, utilità, stesa cosa se apro un file jpeg di una foto delle vacanze con un editor esadecimale che di certo non mi permette di vedere l’immagine della piacevole vacanza passata, vedo solo dei dati, che hanno bisogno di un contesto interpretativo.&lt;/p&gt;

&lt;p&gt;Le basi di dati, i database, sono pieni di dati, il loro compito e proprio contenerli e gestirli, pensate ad una colonna che contiene 10,20,34,38 se non conosco il nome della colonne che si chiama Temperatura mi verrà difficile avere il contesto interpretativo per rendere il dato un informazione quindi qualcosa di utile.&lt;/p&gt;

&lt;p&gt;Per inciso una base di dati è una collezione di dati tra loro correlati e per gestirla abbiamo la necessità di un sistema di gestione di base di dati, quello che comunemente conosciamo come Data Base Management System in sigla DBMS o RDBMS quando si vuole sottolineare che il database è relazionale.&lt;/p&gt;

&lt;p&gt;Quando ci si muove nel mondo dei Big Data spesso i database non sono relazionali per i motivi che vedremo.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/bigdata_datascience_database_i_fondamentali_1/&quot;&gt;Big Data, Data Science, Database i fondamentali 1&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on May 02, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Interfacce con il mondo esterno in R]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/linguaggio_r_%20interfacce_con_il_%20mondo_esterno/" />
  <id>http://massimocaliman.it/articles/linguaggio_r_ interfacce_con_il_ mondo_esterno</id>
  <published>2016-04-02T00:45:33+02:00</published>
  <updated>2016-04-02T00:45:33+02:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    
&lt;p&gt;I dati vengono letti tramite interfacce di collegamento . Le connessioni possono essere a file o url per esempio .&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;file&lt;/code&gt;, apre una connessione a un file&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;gzfile&lt;/code&gt;, apre un collegamento ad un file compresso con gzip&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;bzfile&lt;/code&gt;, apre un collegamento ad un file compresso con bzip2&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;url&lt;/code&gt;, apre un collegamento a una pagina web&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Per connettersi ad un file&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; str&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;file&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;blocking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; TRUE,
&lt;span class=&quot;nv&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; getOption&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;encoding&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Descrizione è il nome del file open è un codice che indica&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“r” sola lettura&lt;/li&gt;
  &lt;li&gt;“w” scrittura (e inizializzazione di un nuovo file)&lt;/li&gt;
  &lt;li&gt;“a” append&lt;/li&gt;
  &lt;li&gt;“rb”, “wb”, “ab” lettura,scrittura, o append in binary mode (Windows)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In generale, i collegamenti sono strumenti potenti che consentono di navigare file o altri oggetti esterni. 
In pratica, spesso non abbiamo bisogno di trattare con l’interfaccia di collegamento direttamente .&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;con &amp;lt;- file&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;foo.txt&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
data &amp;lt;- read.csv&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;con&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
close&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;con&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;equivale a&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;data &amp;lt;- read.csv&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;foo.txt&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;lettura per righe di un file di testo&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;con &amp;lt;- gzfile&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;example.gz&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
x &amp;lt;- readLines&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;con, 10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;writeLines&lt;/code&gt; prende un vettore di caratteri e scrive ciascun elemento  una riga alla volta su un file di testo.
&lt;code&gt;readLines&lt;/code&gt; può essere utile per la lettura per linee di pagine web&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;con &amp;lt;- url&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://google.com&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
x &amp;lt;- readLines&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;con&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/linguaggio_r_%20interfacce_con_il_%20mondo_esterno/&quot;&gt;Interfacce con il mondo esterno in R&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on April 02, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Funzioni che implementano cicli in R]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/linguaggio_r_funzioni_che_implementano_cicli/" />
  <id>http://massimocaliman.it/articles/linguaggio_r_funzioni_che_implementano_cicli</id>
  <published>2016-03-01T23:45:33+01:00</published>
  <updated>2016-03-01T23:45:33+01:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;h2 id=&quot;loop-dalla-riga-di-comando&quot;&gt;Loop dalla riga di comando&lt;/h2&gt;

&lt;p&gt;I costrutti  &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; i loop in generale sono è utili in fase di programmazione, ma non sono particolarmente facili quando si lavora in modo interattivo da riga di comando. Ci sono alcune funzioni che implementano loop per rendere la vita più facile. Sono le funzioni &lt;code&gt;*apply&lt;/code&gt; (&lt;code&gt;lapply&lt;/code&gt;,&lt;code&gt;sapply&lt;/code&gt;,&lt;code&gt;apply&lt;/code&gt;,&lt;code&gt;tapply&lt;/code&gt;,&lt;code&gt;mapply&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Una funzione ausiliaria utile in combinazione con le funzioni &lt;code&gt;*apply&lt;/code&gt; è &lt;code&gt;split&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;lapply&quot;&gt;lapply&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;lapply&lt;/code&gt; accetta tre argomenti: (1) una lista X; (2) una funzione FUN; (3) altri argomenti attraverso il suo … argomento . Se X non è un elenco , sarà costretto ad un elenco utilizzando &lt;code&gt;as.list&lt;/code&gt;
Il loop reale è fatto internamente in codice C (quindi attenzione sul lato dati ottenuti dal profiling).
&lt;code&gt;lapply&lt;/code&gt; restituisce sempre un elenco, indipendentemente dalla classe di ingresso .&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;f &amp;lt;- &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x+1&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
l &amp;lt;- 1:4
y &amp;lt;- lapply&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x,f&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
y
&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 2

&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 3

&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 4

&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;4&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 5&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;sapply&quot;&gt;sapply&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sapply&lt;/code&gt; tenta di semplificare il risultato di &lt;code&gt;lappy&lt;/code&gt; se possibile.
Se il risultato è una lista in cui ogni elemento è di lunghezza 1, viene restituito un vettore
Se il risultato è una lista in cui ogni elemento è un vettore della stessa lunghezza ( &amp;gt; 1 ) , viene restituita una matrice.
Se &lt;code&gt;sapply&lt;/code&gt; non riesce a semplificare viene ritornata  una lista.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; z&amp;lt;-sapply&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x,f&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&amp;gt; z
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; 5&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Comodo non trovate?&lt;/p&gt;

&lt;h2 id=&quot;apply&quot;&gt;apply&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;apply&lt;/code&gt; viene utilizzato per la valutazione di una funzione ( spesso di natura anonima ) sulle colonne o righe di un array.
E’ utilizzato più spesso per applicare una funzione alle righe o colonne di una matrice
Non è più veloce che scrivere un ciclo for, ma funziona in una sola riga.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; str&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;apply&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;X, MARGIN, FUN, ...&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;MARGIN è un vettore intero che indica quali margini debbano essere “mantenuti”
L’esempio sotto spero possa chiarire meglio (rnorm ci serve solo per popolare una matrice con una distribuzione normale)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;x &amp;lt;- matrix&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rnorm&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;200&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 20, 10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&amp;gt; x &amp;lt;- matrix&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rnorm&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;200&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 20, 10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&amp;gt; x
            &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;,1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;,2&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;,3&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;,4&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;,5&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;,6&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.3963635 -0.62742303  0.8559908  0.041758983  0.27968550 -1.51067608
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  2.7989429 -0.31108344  1.1125721  0.493892152 -0.99877881 -0.03635573
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  1.2729939  0.68517518 -0.5754894  0.001258338  0.89842612  0.76899917
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;4,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.1972043  0.14728076  0.5571848 -2.317407366 -0.94433394  0.22643282
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;5,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -1.0229955 -0.88704721 -0.2349964 -0.583044998 -0.38175450  0.79859082
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;6,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -2.2307039 -0.88393872 -1.1304861 -0.980230092 -1.19778042 -0.43944938
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;7,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.3239625 -0.07626231 -0.9167339  0.801793737  0.04583193 -0.44677327
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;8,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -2.1721930 -1.82162706 -0.1360091 -0.182583486  0.55254262 -0.55473856
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;9,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.5550490  0.17079315  0.3854185 -0.373603391 -1.23080985 -0.21907699
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;10,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -1.2234382 -1.87715072  0.6801925 -0.017450599  0.58342107  1.06882246
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;11,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.6361036  0.97475767 -0.3576995 -0.976218424 -0.31131696 -0.68747609
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.8353006  0.10183363 -0.0431286  0.806635605  0.03548096  0.21567848
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;13,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.5288823 -0.63436779  0.6056696  1.327055934  1.14380212  1.37146119
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;14,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -1.9836052 -0.73356595 -0.6248551 -2.267205407  0.02242875  0.16491377
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;15,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.8844882 -0.80770863 -1.9859983 -0.451040532 -0.32321439 -0.01792890
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;16,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  1.0193884  2.37281492  2.4778778 -0.360414709 -2.43461189  0.30425171
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;17,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.8749364  0.08347713  0.8584569  0.517227375 -0.65717674  0.67537576
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;18,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  1.2128844 -0.69963544  1.4121788  0.318647904  1.81284950 -2.80769002
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;19,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -1.0978996 -0.65164157  0.3670463  0.324967520  0.30765970  1.63676395
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;20,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.2675550  0.48960663 -0.1027670 -0.120393201 -0.17096206 -0.91307091
             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;,7&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;,8&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;,9&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;,10&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -2.07670554  1.23033091  0.76424487  1.12007931
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.50517705  0.37403268 -0.45168099  0.33952347
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.61391033 -1.38076619 -0.36363689  0.26394571
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;4,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.44591035 -0.49826675 -1.24337397 -0.82563916
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;5,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  1.37051701  0.12793799 -0.85043741  0.61634465
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;6,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.28234386  0.81821623  1.77128818  0.51458107
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;7,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -1.38204064  1.33920876  1.18078293 -1.75728697
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;8,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.27306276  0.60752641  1.90182306  0.21603295
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;9,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -1.01114509 -0.19292137 -2.46298102  0.39364777
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;10,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.49441357 -0.92996020  0.68627864  0.77054459
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;11,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.60748224  0.68570630  0.85982787 -1.03110133
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.05768264 -0.02326520 -0.02293647  0.45317369
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;13,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.44162534  0.01338081 -0.83990493  0.23590051
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;14,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.19310634 -0.67757005 -0.56180696  1.91955470
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;15,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.37236650 -2.81973163  0.28650254 -1.45773888
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;16,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.70371313  1.34526893  0.41251129  0.32920038
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;17,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.52115092  0.92246177 -0.70595800 -0.74992266
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;18,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.25084633  1.41506634  0.67849775  1.00418821
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;19,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.74722596 -0.57426375  0.65830451 -0.01854943
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;20,&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -2.49597657  0.85960698 -0.18431592  0.34410820
&amp;gt;  apply&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x, 2, mean&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.19912313 -0.24928564  0.16022123 -0.19981773 -0.14843056 -0.02009729
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;7&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.23467453  0.13209995  0.07565145  0.13402934&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;mapply&quot;&gt;mapply&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;mapply&lt;/code&gt; è un versione multivariate di apply che applica una funzione in parallelo su una serie di argomenti .
Un esempio è riportato sotto, l1 contiene gli stessi elementi di l2
rep è una funzione che “replica” l’elemento passato un numero di volte richiesto e lo ritorna come elenco, p.e.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; rep&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1,5&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; 1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;l1&amp;lt;-list&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rep&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1, 4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, rep&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2, 3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, rep&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, rep&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4, 1&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

l2&amp;lt;-mapply&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rep, 1:4, 4:1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;tapply&quot;&gt;tapply&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tapply&lt;/code&gt; viene utilizzato per applicare una funzione su sottoinsiemi di un vettore&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;x &amp;lt;- c&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rnorm&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, runif&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, rnorm&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10, 1&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
f &amp;lt;- gl&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3, 10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
tapply&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x, f, mean&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;split&quot;&gt;split&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;split&lt;/code&gt; prende un vettore (o altro tipo di elenco di oggetti) e lo divide in gruppi determinati da un fattore o un elenco di fattori.&lt;/p&gt;

&lt;p&gt;Per esempio partizioniamo in due gruppi, gli elementi di x &amp;gt;1 e quelli &amp;lt;=1&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; split&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x,x&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;&amp;gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$`&lt;/span&gt;FALSE&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -1.13857804  0.21853696 -0.25563963  0.51938904  0.24105612  0.13492624
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;7&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -0.59042828 -0.52559665  0.67772599  0.79394383  0.81569013  0.48512614
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;13&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.34841619  0.60159291  0.45714304  0.40336332  0.71783361  0.86962872
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;19&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  0.84581567  0.94133809 -0.36174582  0.83549908  0.05453992

&lt;span class=&quot;nv&quot;&gt;$`&lt;/span&gt;TRUE&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 1.343577 1.742792 1.389213 1.252149 1.650007 1.350450 3.162776&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/linguaggio_r_funzioni_che_implementano_cicli/&quot;&gt;Funzioni che implementano cicli in R&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on March 01, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Oggetti data, orari e intervalli di tempo in R]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/linguaggio_r_date_e_orari/" />
  <id>http://massimocaliman.it/articles/linguaggio_r_date_e_orari</id>
  <published>2016-02-10T23:45:33+01:00</published>
  <updated>2016-02-10T23:45:33+01:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    
&lt;h2 id=&quot;la-classe-date&quot;&gt;La classe Date&lt;/h2&gt;
&lt;p&gt;R ha una speciale rappresentazione di oggetti date e ora,le date sono rappresentate tramite la classe &lt;code&gt;Date&lt;/code&gt;,orari e intervalli di tempo con le classi &lt;code&gt;POSIXct&lt;/code&gt; o &lt;code&gt;POSIXlt&lt;/code&gt;. 
Le date vengono memorizzate internamente come il numero di giorni dal 1/1/1970 mentre gli orari e intervalli sono memorizzati internamente come il numero di secondi trascorsi dal 1/1/1970&lt;/p&gt;

&lt;h2 id=&quot;classi-per-orari-e-intervalli-di-tempo&quot;&gt;Classi per orari e intervalli di tempo&lt;/h2&gt;
&lt;p&gt;Le date sono rappresentate dalla classe &lt;code&gt;Date&lt;/code&gt; e possono essere sottoposte a coercizione (conosciuto con il nome di cast in altri linguaggi) da una stringa di caratteri nel seguente modo&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;x &amp;lt;- as.Date&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1970-01-01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
x
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1970-01-01&amp;quot;&lt;/span&gt;
&amp;gt; class&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Date&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Orari e intervalli di tempo sono rappresentate utilizzando le classi
&lt;code&gt;POSIXct&lt;/code&gt; e &lt;code&gt;POSIXlt&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;POSIXct&lt;/code&gt; sotto il “cofano” è solo un grande numero intero e si usa quando si desidera memorizzare orari in qualcosa di simile a un frame di dati&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;POSIXlt&lt;/code&gt; ha “detro” una lista e memorizza una serie di altre informazioni utili come il giorno della settimana, giorno dell’anno , mese , giorno del mese (ed è più utile quando bisogna effettuare manipolazioni)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ci sono un certo numero di funzioni generiche per gli oggetti di tipo date e orari&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;weekdays&lt;/code&gt; : ritorna il giorno della settimana&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;months&lt;/code&gt; : ritorna il nome del mese&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;quarters&lt;/code&gt; : ritorna il numero del quadrimestre (“Q1”, “Q2”, “Q3”,“Q4”)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;gli orari possono essere ottenuti da una stringa di caratteri utilizzando le funzioni &lt;code&gt;as.POSIXlt&lt;/code&gt; o &lt;code&gt;as.POSIXct&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;t1 &amp;lt;- Sys.time&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
posix1&amp;lt;- as.POSIXlt&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;t1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
posix1&lt;span class=&quot;nv&quot;&gt;$sec&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#prende la parte secondi, posso farlo perchè l&amp;#39;ho costruito come POSIXlt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;oppure posso utilizzare il format &lt;code&gt;POSIXct&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;nel caso in cui le date siano scritte in un formato diverso si può usare la funzione &lt;code&gt;strptime&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;datestring &amp;lt;- c&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;January 10, 2012 10:40&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;December 9, 2011 9:10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
x &amp;lt;- strptime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;datestring, &lt;span class=&quot;s2&quot;&gt;&amp;quot;%B %d, %Y %H:%M&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#restituisce &amp;quot;2012-01-10 10:40:00 EST&amp;quot; &amp;quot;2011-12-09 09:10:00 EST&amp;quot; ed è interessante notare che l&amp;#39;ho applicato ad una lista&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;operazioni-su-oggetti-di-tipo-date-e-posix&quot;&gt;Operazioni su oggetti di tipo Date e POSIX*&lt;/h2&gt;

&lt;p&gt;È possibile utilizzare le operazioni matematiche &lt;code&gt;+&lt;/code&gt; e &lt;code&gt;-&lt;/code&gt; su date e orari e così anche quelli di confronto come &lt;code&gt;==&lt;/code&gt; e &lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;lct &amp;lt;- Sys.getlocale&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;LC_TIME&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Sys.setlocale&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;LC_TIME&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
x &amp;lt;- as.Date&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2012-01-01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;y &amp;lt;- strptime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;January 10, 2012 10:40&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;%B %d, %Y %H:%M&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
x-y

Error in x - y : argomento non numerico trasformato in operatore binario
Inoltre: Warning message:
Metodi incompatibili &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;-.Date&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;-.POSIXt&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; per &lt;span class=&quot;s2&quot;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; 

x &amp;lt;- as.POSIXlt&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# i tipi erano incompatibili trasformo tutto in POSIXlt&lt;/span&gt;
x-y
Time difference of -9.402778 days

&lt;span class=&quot;c&quot;&gt;# unclass ci dice anche che l&amp;#39;unico attributo a cui possiamo attingere è quello che abbiamo giù ottenuto e cioè la differenza in giorni&lt;/span&gt;
&amp;gt; unclass&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;differenza&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -9.402778
attr&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;units&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;days&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#come anticipato posso applicare anche gli operatori di ordinamento&lt;/span&gt;

x&amp;gt;y
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; FALSE&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;tiene anche traccia degli anni bisestili , ora legale e fusi orari .&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; x &amp;lt;- as.Date&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2012-03-01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
&amp;gt; y &amp;lt;- as.Date&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2012-02-28&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&amp;gt; x-y
Time difference of &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; days&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;x &amp;lt;- as.POSIXct&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2012-10-25 01:00:00&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
y &amp;lt;- as.POSIXct&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2012-10-25 06:00:00&amp;quot;&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;tz&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;GMT&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
y-x
Time difference of &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; hours&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/linguaggio_r_date_e_orari/&quot;&gt;Oggetti data, orari e intervalli di tempo in R&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on February 10, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[le funzioni in R]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/linguaggio_r_funzioni/" />
  <id>http://massimocaliman.it/articles/linguaggio_r_funzioni</id>
  <published>2016-01-20T23:45:33+01:00</published>
  <updated>2016-01-20T23:45:33+01:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Le funzioni sono create usando la direttiva &lt;code&gt;function()&lt;/code&gt; e memorizzate come qualsiasi altro oggetto in R. 
In particolare sono oggetti di classe funzione.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;f &amp;lt;- &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;lt;arguments&amp;gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c&quot;&gt;# corpo della funzione&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Le funzioni in R sono &lt;code&gt;first class objects&lt;/code&gt;, il che significa che possono essere trattate come qualsiasi altro oggetto in R: possono essere passati come argomenti per altre funzioni e possono essere nidificate (in questo modo si può definire una funzione all’interno di un’altra funzione),il valore di ritorno di una funzione è l’ultima espressione da valutare nel corpo della funzione.&lt;/p&gt;

&lt;h2 id=&quot;argomenti-di-una-funzione&quot;&gt;Argomenti di una funzione&lt;/h2&gt;

&lt;p&gt;Gli argomenti formali sono argomenti inclusi nella definizione di una funzione
Non tutte le chiamate a una funzione si avvalgono di tutti gli argomenti formali, in quanto
un argomento di una funzione potrebbe essere mancante o potrebbero avere valori di default.&lt;/p&gt;

&lt;h2 id=&quot;il-matching-degli-argomenti&quot;&gt;Il matching degli argomenti&lt;/h2&gt;
&lt;p&gt;Qualcosa che trovo veramente comodo: il match degli argomenti di una funzione può avvenire per posizione o per nome
Le seguenti chiamate sono equivalenti&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;dati &amp;lt;- rnorm&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;100&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
sd&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;dati&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
sd&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dati&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
sd&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dati, na.rm &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; FALSE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
sd&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;na.rm &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; FALSE, &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dati&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
sd&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;na.rm &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; FALSE, dati&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Anche se è permesso, non vi sconsiglio di giocare troppo con l’ordine naturale (ordine della definizione di funzione) degli argomenti,serve solo a fare confusione.&lt;/p&gt;

&lt;p&gt;E’ possibile combinare corrispondenza posizionale con corrispondenza in base al nome .
Quando un argomento viene accompagnato dal nome,viene tolto della lista degli argomenti e gli argomenti senza nome rimanenti sono abbinati nell’ordine in cui sono elencati nella definizione della funzione.&lt;/p&gt;

&lt;p&gt;Personalmente, data una funzione, trovo più utile utilizzare solo o l’una o l’altra (o solo per posizione o solo per nome), ma se vi doveste trovare di fronte a codice scritto con questa modalità mixed è utile conoscere le regole del gioco.&lt;/p&gt;

&lt;h2 id=&quot;definire-una-funzione&quot;&gt;definire una funzione&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;f &amp;lt;- &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;a, &lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1, &lt;span class=&quot;nv&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 2, &lt;span class=&quot;nv&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; NULL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Oltre a non specificare un valore di default , è possibile anche impostare un valore di argomento NULL .&lt;/p&gt;

&lt;h2 id=&quot;lazy-evaluation&quot;&gt;Lazy Evaluation&lt;/h2&gt;
&lt;p&gt;Gli argomenti a funzioni vengono valutate lazy, in modo che siano valutati solo quando necessario .&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;f &amp;lt;- &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;a, b&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   a^2
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
f&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## [1] 4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Questa funzione non utilizza effettivamente l’argomento b e chiamare f (2) non produrrà un errore.&lt;/p&gt;

&lt;p&gt;Mentre per l’esempio sotto l’errore viene prodotto per ovvie ragioni.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;f &amp;lt;- &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;a, b&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;b&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
f&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;45&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## [1] 45&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## Error: argument &amp;quot;b&amp;quot; is missing, with no default&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esiste poi l’argomento … ma di questo parleremo in un altro post.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/linguaggio_r_funzioni/&quot;&gt;le funzioni in R&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on January 20, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Le strutture di controllo di R]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/linguaggio_r_strutture_di_controllo/" />
  <id>http://massimocaliman.it/articles/linguaggio_r_strutture_di_controllo</id>
  <published>2016-01-15T23:45:33+01:00</published>
  <updated>2016-01-15T23:45:33+01:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Le strutture di controllo in R consentono di controllare il flusso di esecuzione del programma, in base alle condizioni a runtime in maniera non dissimile da qualsiasi altro linguaggio imperativo (come C,Java,Python), vediamo velocemente le parole riservate dedicate alle strutture di controllo&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;if, else: test di una condizione&lt;/li&gt;
  &lt;li&gt;for: esecuzione di un ciclo per un numero prefissato di volte&lt;/li&gt;
  &lt;li&gt;while: esecuzione di un ciclo mentre/fintanto che condizione è vera&lt;/li&gt;
  &lt;li&gt;repeat: esecuzione di un ciclo infinito&lt;/li&gt;
  &lt;li&gt;break: interrompe l’esecuzione di un ciclo&lt;/li&gt;
  &lt;li&gt;next: salta un iterazione di un ciclo (il continue del C o Java per intenderci)&lt;/li&gt;
  &lt;li&gt;return: esce da una funzione o ciclo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La maggior parte delle strutture di controllo non sono utilizzate in sessioni interattive , ma piuttosto durante la scrittura di funzioni o
espressioni più lunghe. Vediamo in dettaglio i vari costrutti.&lt;/p&gt;

&lt;h2 id=&quot;ifelse&quot;&gt;if,else&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;lt;condizione&amp;gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;c&quot;&gt;# fa qualcosa ramo if&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# fa qualcosa ramo else&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;lt;condizione1&amp;gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# fa qualcosa se condizione 1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;lt;condizione2&amp;gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# fa qualcosa se condizione 2&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# fa qualcosa in tutti gli altri casi&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Un esempio di if else&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x &amp;gt; 10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  y &amp;lt;- 0
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  y &amp;lt;- 1
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;for&quot;&gt;for&lt;/h2&gt;
&lt;p&gt;Il for usa una variabile come iteratore (la variabile i nell’esempio) e ne assegna i valori successivi da una sequenza o vettore. 
I for sono comunemente utilizzati per l’iterazione sugli elementi di un oggetto (elenco,vector , etc. )&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i in 1:10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Questo ciclo prende la variabile i e in ogni iterazione del ciclo usa i suoi valori 1, 2, 3, …, 10, ed esce&lt;/p&gt;

&lt;p&gt;questi 3 cicli hanno lo stesso comportamento&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;x &amp;lt;- c&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i in 1:4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i in seq_along&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;letter in x&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;letter&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i in 1:4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;i cicli for possono ovviamente essere nidificati come in qualsiasi altro linguaggio di programmazione.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;x &amp;lt;- matrix&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1:6, 2, 3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i in seq_len&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;nrow&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;j in seq_len&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ncol&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;i, j&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;e allo stesso modo è necessario fare attenzione nel nidificare per più di 3 o 4 livelli in quanto rende spesso illeggibile un frammento di codice.&lt;/p&gt;

&lt;h2 id=&quot;while&quot;&gt;while&lt;/h2&gt;

&lt;p&gt;I cicli while iniziano testando una condizione, se è vera, allora eseguono il corpo del ciclo. Una volta che il ciclo corpo viene eseguita , viene provata la condizione di nuovo , e così via .&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;count &amp;lt;- 0
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;count &amp;lt; 10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;count&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   count &amp;lt;- count + 1
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;repeat&quot;&gt;repeat&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;repeat&lt;/code&gt; avvia un ciclo infinito ;  L’unico modo per uscire da un ciclo repeat è quello di chiamare &lt;code&gt;break&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;repeat &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   x &amp;lt;- f&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&amp;lt;10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      x &amp;lt;- x-1
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;next-return&quot;&gt;next, return&lt;/h2&gt;
&lt;p&gt;next è usato per saltare un iterarazione di un loop&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i in 1:100&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i &amp;lt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 20&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;## salta 20 iterazioni&lt;/span&gt;
      next
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;c&quot;&gt;## non fa nullla&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;return segnala che una funzione è terminata è deve tornare un valore&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/linguaggio_r_strutture_di_controllo/&quot;&gt;Le strutture di controllo di R&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on January 15, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Il design pattern State]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/state-pattern-java-examples/" />
  <id>http://massimocaliman.it/articles/state-pattern-java-examples</id>
  <updated>2016-01-30T00:00:00-00:00</updated>
  <published>2016-01-13T00:00:00+01:00</published>
  
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Potete trovare un progetto di esempio su github a questo indirizzo:
&lt;a href=&quot;https://github.com/mcaliman/StatePatternJavaExamples&quot;&gt;&lt;strong&gt;https://github.com/mcaliman/StatePatternJavaExamples&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Qualche informazione su questo pattern.&lt;/p&gt;

&lt;p&gt;E’ un design pattern comportamentale (I pattern comportamentali forniscono soluzione alle più comuni 
tipologie di interazione tra gli oggetti)&lt;/p&gt;

&lt;p&gt;E’ usato quando un oggetto deve cambiare il proprio comportamento (a &lt;strong&gt;run-time&lt;/strong&gt;) in base al suo stato interno.&lt;/p&gt;

&lt;p&gt;Evita di utilizzare sequenze di blocchi condizionali &lt;strong&gt;if-else&lt;/strong&gt; ( &lt;a href=&quot;http://antiifcampaign.com/&quot;&gt;Campagna AntiIF&lt;/a&gt; )&lt;/p&gt;

&lt;p&gt;Fornisce un modo sistematico e &lt;strong&gt;lose-coupled&lt;/strong&gt; per raggiungere questo obiettivo.&lt;/p&gt;

&lt;p&gt;Si compone di una interfaccia &lt;code&gt;State&lt;/code&gt;, una classe concreta &lt;code&gt;Context&lt;/code&gt; e una o più classi concrete che implementano 
l’interfaccia &lt;code&gt;State&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;Context&lt;/code&gt; definisce l’interfaccia della classe client e mantiene un riferimento ad un &lt;code&gt;ConcreteState&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;State&lt;/code&gt;  definisce l’interfaccia implementata dai &lt;code&gt;ConcreteState&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Le classi &lt;code&gt;ConcreteState&lt;/code&gt; incapsulano la logica del comportamento associato ad un determinato stato.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vediamo di comprendere come funziona con un breve esempio su github
e di cui riporto il codice in questo post.&lt;/p&gt;

&lt;p&gt;Per prima cosa definiamo l’interfaccia, è sufficiente che abbia solo un metodo execute.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vogliamo implementare un sistema di gestione dei contenuti con tre stati: &lt;strong&gt;draft&lt;/strong&gt;, &lt;strong&gt;published&lt;/strong&gt; e &lt;strong&gt;deleted&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;La nostra applicazione di prova potrà avere tre bottoni per eseguire le rispettive azioni.&lt;/p&gt;

&lt;p&gt;La soluzione che adotta il design pattern State è quella che implementa tante classi concrete di &lt;code&gt;State&lt;/code&gt; 
quanti sono gli stati previsti.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DarftState&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    * Salva il contenuto in stato bozza e non fa altro. &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    * Se non esiste il contenuto, lo crea effettuando la creazione del record,&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    * altrimenti cambia stato al record reimpostandolo a draft e salvando&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    * le modifiche del testo, metadati ecc.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    */&lt;/span&gt;
   &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;        
      &lt;span class=&quot;c1&quot;&gt;//stuff...&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Creiamo la classe &lt;code&gt;Context&lt;/code&gt; che deve avere un riferimento ad un oggetto di tipo &lt;code&gt;State&lt;/code&gt;. 
Un oggetto di tipo &lt;code&gt;Context&lt;/code&gt; dovrà avere un meccanismo per cambiare l’attributo &lt;code&gt;state&lt;/code&gt; e 
un metodo che propaga ad esso l’azione realizzata dal metodo execute.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;La classe &lt;code&gt;Context&lt;/code&gt; nel nostro caso potrebbe anche chiamarsi Post e contenere più attributi e metodi, 
per esempio contenere il riferimento al record o entity del contenuto di cui si vuole gestire il ciclo di vita.
Per gli altri stati vi rimando al codice su github i cui riferimenti sono in testa a questo post.
Per finire un esempio di utilizzo che cambia tre volte stato al nostro oggetto.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;darftState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DarftState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;publishState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PublishState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deletedState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DeletedState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;darftState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;publishState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deletedState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Se si deve aggiungere un nuovo comportamento o stato dobbiamo progettare una 
nuova classe che implementi &lt;code&gt;State&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Quali svantaggi può avere l’adozione di questo pattern? 
Evidentemente aumentano il numero di classi ma questo è preferibile nella maggioranza dei casi
a una unica classe con lunghe sequenze di istruzioni condizionali &lt;code&gt;if&lt;/code&gt; (o &lt;code&gt;switch&lt;/code&gt;). 
Un vantaggio per nulla indifferente: in un team di sviluppatori
la scrittura dei singoli &lt;code&gt;ConcreteState&lt;/code&gt; può essere assegnata e gestita facilmente rispetto all’alternativa di&lt;br /&gt;
mettere le mani in due o più sullo stessa unica classe.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/state-pattern-java-examples/&quot;&gt;Il design pattern State&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on January 13, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Linguaggio R introduzione]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/linguaggio_r_introduzione/" />
  <id>http://massimocaliman.it/articles/linguaggio_r_introduzione</id>
  <published>2016-01-10T23:45:33+01:00</published>
  <updated>2016-01-10T23:45:33+01:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Ho scoperto il linguaggio di programmazione R quasi per caso e ne sono rimasto affascinato.
La prima cosa da sapere è che R è più di un linguaggio di programmazione, è anche un ambiente di sviluppo completo. 
Basato sul linguaggio S è utilizzato per la gestione e l’analisi statistica di dati per la produzione di grafici ed è disponibile gratuitamente sotto i vincoli della licenza GPL.&lt;/p&gt;

&lt;p&gt;R è un ambiente interattivo (come python): i comandi producono una risposta immediata.&lt;/p&gt;

&lt;p&gt;Una volta che R è stato lanciato, tutte le istruzioni sono eseguibili dalla linea
di comando dell’ambiente, caratterizzata dal prompt &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;la linea di comando viene eseguita premendo il tasto &lt;code&gt;Invio&lt;/code&gt;. 
Nel suo utilizzo più semplice, può essere utilizzato come calcolatrice (una calcolatrice cresciuta un pò troppo)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; 2+2*2
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 6
&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Per costruire un oggetto viene utilizzato il comando &lt;code&gt;&amp;lt;-&lt;/code&gt;  o  &lt;code&gt;=&lt;/code&gt; (od anche &lt;code&gt;-&amp;gt;&lt;/code&gt; si avete letto bene, quindi potete fare &lt;code&gt;x&amp;lt;-a+1&lt;/code&gt; ma anche &lt;code&gt;a+1-&amp;gt;x&lt;/code&gt; ).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; x&amp;lt;-1+7
&amp;gt; 1+7-&amp;gt;x
&amp;gt; x
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 8

&amp;gt; x &lt;span class=&quot;c&quot;&gt;# stampa x&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 8&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il carattere &lt;code&gt;#&lt;/code&gt; è il simbolo di commento e tutto ciò che segue viene
ignorato dall’ambiente (vedi le istruzioni appena sopra).&lt;/p&gt;

&lt;p&gt;Analogamente a quanto accade in ogni altro linguaggio di programmazione nel momento in cui si decide di creare un oggetto, l’eventuale oggetto preesistente che possiede lo stesso nome verrà sovrascritto.&lt;/p&gt;

&lt;p&gt;Una nota importante: R è case sensitive quindi l’oggetto &lt;code&gt;X&lt;/code&gt; non è l’oggetto &lt;code&gt;x&lt;/code&gt; (esattamente come accade in C o in Java e Python per esempio e diversamente non accade invece nel linguaggio SQL dove select equivale a Select o SELECT).&lt;/p&gt;

&lt;p&gt;Se proviamo a richiamare un oggetto non ancora creato abbiamo la segnalazione&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; y
Error: Object &lt;span class=&quot;s2&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; not found&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;oppure in italiano&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; y
Errore: oggetto &lt;span class=&quot;s2&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; non trovato
&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Se abbiamo la versione è localizzata in italiano&lt;/p&gt;

&lt;p&gt;Come in ogni altro linguaggio di programmazione esiste una lista di parole riservate che non possono essere utilizzate dall’utente a proprio piacimento, ma ovviamente solo per lo scopo per le quali sono state definite.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;FALSE, TRUE, Inf, NA, NaN, NULL, 
&lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;,in, next, repeat, &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dotato di una grande quantità di funzioni che assolvono ai più comuni
calcoli matematici e statistici R è dotato di un manuale di aiuto in linea per ognuna di esse. 
L’help è visionabile digitando ?&lt;f&gt; o help(&lt;f&gt;) dal prompt dei comandi dove &lt;f&gt; è il nome della funzione.&lt;/f&gt;&lt;/f&gt;&lt;/f&gt;&lt;/p&gt;

&lt;p&gt;per esempio &lt;code&gt;help(mean)&lt;/code&gt; richiama l’help della funzione per il calcolo della media&lt;/p&gt;

&lt;p&gt;Forse una delle più semplici funzioni è &lt;code&gt;rm()&lt;/code&gt; che serve a cancellare gli oggetti (o meglio rimuovere dalla memoria rm sta per remove);
nel suo utilizzo più elementare:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; x&amp;lt;-2+2
&amp;gt; x
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; rm&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&amp;gt; x
Errore: oggetto &lt;span class=&quot;s2&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; non trovato&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vediamo qualche comando che ci verrà spesso utile.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;getwd()&lt;/code&gt; ritorna la directory di lavoro (get work directory). Tutte le operazioni in R fanno riferimento a questa directory di lavoro se non diversamente specificato.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dir()&lt;/code&gt; ritorna la lista delle directory (il tipo di ritorno è  un array e quindi possiamo farci tutte le cose interessanti che possiamo fare con un array)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;read.csv(&quot;mycsv.csv&quot;)&lt;/code&gt; leggere un file csv (e lo rende disponibile in un oggetto se lo assegniamo con l’operatore &amp;lt;- ad una variabile)&lt;/p&gt;

&lt;p&gt;Un ultima cosa in questo primo assagggio introduttivo del linguaggio R: Come si creare una funzione (che poi è il costrutto principale in un linguaggio funzionale)? In modo molto semplice:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;f &amp;lt;- &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   x&amp;lt;-rnorm&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   mean&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;La funzione denominata f che ho appena definito la posso chiamare con il suo nome seguito dalle parentesi f() il valore ritornato è l’ultimo computato, posso salvare la definizione di funzione con estensione .R e ricaricarla con &lt;code&gt;source(&quot;f.R&quot;)&lt;/code&gt;
e dopo con &lt;code&gt;ls()&lt;/code&gt; avere la lista delle funzioni contenute.&lt;/p&gt;

&lt;p&gt;Alcuni file di sistema dell’ambiente di lavoro di R: &lt;code&gt;.Rhistory&lt;/code&gt; e  &lt;code&gt;.Rdata&lt;/code&gt;
Il file &lt;code&gt;.Rhistory&lt;/code&gt; è un file ascii che riporta i codici digitati sul prompt, senza
comunque riportare le risposte di R.
mentre Il file &lt;code&gt;.Rdata&lt;/code&gt; è lo workspace  che contiene tutti gli oggetti salvati nell’ambiente durante l’attuale sessione, è possibile salvare il workspace utilizzando la funzione &lt;code&gt;save.image()&lt;/code&gt; altri dettagli su come sfruttare in modo utile &lt;code&gt;.Rdata&lt;/code&gt; si possono trovare nella documentazione online di R.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/linguaggio_r_introduzione/&quot;&gt;Linguaggio R introduzione&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on January 10, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Il design pattern Visitor]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/visitor-pattern-java-examples/" />
  <id>http://massimocaliman.it/articles/visitor-pattern-java-examples</id>
  <updated>2016-01-03T00:00:00-00:00</updated>
  <published>2016-01-03T00:00:00+01:00</published>
  
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Su github potete trovare il codice dell’articolo che ho postato un pò di tempo fa &lt;a href=&quot;http://javamaniax.com/articles/visitor-patter-java-examples/&quot;&gt;&lt;strong&gt;http://javamaniax.com/articles/visitor-patter-java-examples/&lt;/strong&gt;&lt;/a&gt;
Potete trovare un progetto di esempio su github a questo indirizzo:
&lt;a href=&quot;https://github.com/mcaliman/VisitorPatternJavaExamples&quot;&gt;&lt;strong&gt;https://github.com/mcaliman/VisitorPatternJavaExamples&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/visitor-pattern-java-examples/&quot;&gt;Il design pattern Visitor&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on January 03, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Il design pattern Singleton]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/singleton-pattern-java-examples/" />
  <id>http://massimocaliman.it/articles/singleton-pattern-java-examples</id>
  <updated>2016-01-03T00:00:00-00:00</updated>
  <published>2016-01-03T00:00:00+01:00</published>
  
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Il Singleton è probabilmente il pattern più semplice, alcuni linguaggi come Scala prevedono 
una keyword (&lt;code&gt;object&lt;/code&gt; in luogo di &lt;code&gt;class&lt;/code&gt;) per crearli direttamente senza definire una classe secondo le 
direttive del pattern.
Potete trovare un progetto di esempio su github a questo indirizzo:
&lt;a href=&quot;https://github.com/mcaliman/SingletonPatternJavaExamples&quot;&gt;&lt;strong&gt;https://github.com/mcaliman/SingletonPatternJavaExamples&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/singleton-pattern-java-examples/&quot;&gt;Il design pattern Singleton&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on January 03, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Il design pattern Interpreter]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/interpreter-pattern-java-examples/" />
  <id>http://massimocaliman.it/articles/interpreter-pattern-java-examples</id>
  <updated>2016-01-03T00:00:00-00:00</updated>
  <published>2016-01-03T00:00:00+01:00</published>
  
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Il pattern Interpreter oggi è poco utilizzato, esistono da anni strumenti più potenti e già pronti 
se abbiamo bisogno di dotare la nostra applicazione di un linguaggio di scripting o un crearci un vero 
e proprio DSL (Il linguaggio Scala per questo scopo è straordinariamente efficace). 
Il suo valore didattico resta comunque notevole, apprendere come si realizza un interprete
(per quanto piccolo e limitato) aggiungere al proprio bagaglio informatico conoscenze importanti, 
che non a caso vengono sempre trattati in un corso universitario (sia di informatica che di ingegneria informatica).
Potete trovare un progetto di esempio su github a questo indirizzo:
&lt;a href=&quot;https://github.com/mcaliman/InterpreterPatternJavaExamples&quot;&gt;&lt;strong&gt;https://github.com/mcaliman/InterpreterPatternJavaExamples&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/interpreter-pattern-java-examples/&quot;&gt;Il design pattern Interpreter&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on January 03, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Il design pattern Chain Of Responsibility]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/chain-of-responsibility-pattern-java-examples/" />
  <id>http://massimocaliman.it/articles/chain-of-responsibility-pattern-java-examples</id>
  <updated>2016-01-03T00:00:00-00:00</updated>
  <published>2016-01-03T00:00:00+01:00</published>
  
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Potete trovare un progetto di esempio su github a questo indirizzo:
&lt;a href=&quot;https://github.com/mcaliman/ChainOfResponsibilityPatternJavaExamples&quot;&gt;&lt;strong&gt;https://github.com/mcaliman/ChainOfResponsibilityPatternJavaExamples&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/chain-of-responsibility-pattern-java-examples/&quot;&gt;Il design pattern Chain Of Responsibility&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on January 03, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Il design pattern Strategy]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/strategy-pattern-java-examples/" />
  <id>http://massimocaliman.it/articles/strategy-pattern-java-examples</id>
  <updated>2016-01-02T00:00:00-00:00</updated>
  <published>2016-01-02T00:00:00+01:00</published>
  
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Il pattern Strategy è uno dei pattern che uso più frequentemente. 
Potete trovare un progetto di esempio su github a questo indirizzo:
&lt;a href=&quot;https://github.com/mcaliman/StrategyPatternJavaExamples&quot;&gt;&lt;strong&gt;https://github.com/mcaliman/StrategyPatternJavaExamples&lt;/strong&gt;&lt;/a&gt;
Per illustrare il funzionamento del pattern, ho realizzatre tre sort che utilizzano il metodo classico di ordinamento
di una &lt;code&gt;List&lt;/code&gt;. Questo avviene tramite comparatore, il quale utilizza sia le lambda che gli stream.
Lambda e stream non rendono più performante il processo di ordinamento (anche se non lo escludono), il loro
ruolo è quello di rendere più compatto e leggibile l’algoritmo.
Sicuramente l’uso delle lambda e degli stream rendono noi sviluppatori più performanti nel processo di codifica
e questo non è un dato trascurabile.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/strategy-pattern-java-examples/&quot;&gt;Il design pattern Strategy&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on January 02, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[La classe java.time.LocalTime]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/localtime1/" />
  <id>http://massimocaliman.it/articles/localtime1</id>
  <updated>2015-11-29T00:00:00-00:00</updated>
  <published>2015-12-16T00:00:00+01:00</published>
  
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Parliamoci chiaro, anche se sei un Java Enthusiast della prima ora, anche se ami questo linguaggio quanto me,
la gestione degli oggetti java.util.Date e java.sql.Date non ti è mai andata giù, vero? Ti sei addirittura convinto, col tempo,
che avere un unico oggetto per gestire data e ora fosse tutto sommato comodo! E pazienza per quei metodi deprecati 
(oppure usavi la libreria Joda-Time…), beh, era vero nel 1998, si il secolo scorso, proprio così,
perchè da allora ben poco o nulla è cambiato. Date un occhiata al codice sorgente della classe java.util.Date.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@author&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;James&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Gosling&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@author&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Arthur&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;van&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Hoff&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@author&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Alan&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Liu&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@see&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DateFormat&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@see&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Calendar&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@see&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TimeZone&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@since&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;JDK1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Serializable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cloneable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Comparable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Avete notato &lt;code&gt;@since   JDK1.0&lt;/code&gt; ?
E che dire di quei costuttori deprecati tanto comodi:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@param&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minus&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@param&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;between&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@param&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;between&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@see&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Calendar&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@deprecated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JDK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replaced&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GregorianCalendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;*/&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Deprecated&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notare &lt;code&gt;@deprecated As of JDK version 1.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Per non parlare dei metodi come  &lt;code&gt;getYear()&lt;/code&gt;, fantastico! E se… “oh! domani si va in produzione non facciamo scherzi! codice che 
gira non si tocca! tanto i metodi deprecati ci seppelliscono tutti, figuarati, Oracle non li leva fino al 2030”&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@deprecated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JDK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replaced&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;YEAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;*/&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Deprecated&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;normalize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si, forse hai ragione (lo hai pensato anche tu, non negarlo). Ora però, se ci fosse qualcosa di meglio che
ti semplificasse la vita, non lo useresti?&lt;/p&gt;

&lt;p&gt;Beh, la prima impressione con LocalTime e LocalDate non è stata eccezionale, potevano fare qualcosa in più, per esempio rendere
più immediato il passare dai vecchi oggetti Date ai nuovi LocalDate e LocalTime, ma se ci pensate, forse è meglio così, 
nuovo progetto, solo oggetti LocalDate e LocalTime.&lt;/p&gt;

&lt;p&gt;Per oggi iniziamo con qualcosa di molto elementare, ma che facciamo di sovente&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.time.LocalTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.time.format.DateTimeFormatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;passare da una rappresentazione testuale (HH:mm) ad un
oggetto LocalTime, e viceversa. Sotto trovate il codice.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;DateTimeFormatter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTimeFormatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofPattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HH:mm&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LocalTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localTime1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localTime1AsString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localTime1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;        
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;localTime1AsString:&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localTime1AsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//From String HH:mm To LocalTime object (parsing)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LocalTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;23:59&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;lTime.toString()&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/localtime1/&quot;&gt;La classe java.time.LocalTime&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on December 16, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Ubuntu 14.04.02 LTS installare subversion (svn)]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-installare-subversion/" />
  <id>http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-installare-subversion</id>
  <published>2015-05-16T00:45:33+02:00</published>
  <updated>2015-05-16T00:45:33+02:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Parte della disumanità del computer sta nel fatto che, una volta programmato e messo in funzione, si comporta in maniera perfettamente onesta. &lt;em&gt;(Isaac Asimov, Il vento è cambiato, 1983)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Anche in questo caso apt è più che generoso&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install subversion&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Non installiamo con apache perché accederemo a svn tramite ssh in modo molto più sicuro.
Per prima cosa creiamo la directory che ospiterà il nostro progetto e repo&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir /var/svn/MyApplication&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;“informiamo” svn che questa directory è un repository&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;svnadmin create /var/svn/MyApplication&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A questo punto dal nostro IDE preferitò possiamo effettuare un checkout o inizializzare il repo con quando abbiamo in locale, 
l’url del repo è nel formato seguente&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;svn+ssh://svnserver/var/svn/MyApplication&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-installare-subversion/&quot;&gt;Ubuntu 14.04.02 LTS installare subversion (svn)&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on May 16, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Ubuntu 14.04.02 LTS installare git]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-installare-git/" />
  <id>http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-installare-git</id>
  <published>2015-05-15T00:45:33+02:00</published>
  <updated>2015-05-15T00:45:33+02:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Parte della disumanità del computer sta nel fatto che, una volta programmato e messo in funzione, si comporta in maniera perfettamente onesta. &lt;em&gt;(Isaac Asimov, Il vento è cambiato, 1983)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Il nostro nuovo server linux può esserci molto utile anche per effettuare delle copie locali, regolari e sistematiche dei nostri progetti che si trovano in un sistema di versionamento come subversion (svn) o git. 
Iniziamo con git, installarlo ci servirà per esempio per effettuare un checkout schedulato di quanto abbiamo ad esempio su github o altro server git.
Per installare git procediamo come al solito tramite apt&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;verifichiamo che tutto sia correttamente installato con&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;senza parametri. Dobbiamo effettuare la configurazione iniziale di git per dirgli chi siamo&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo git config --global user.name &lt;span class=&quot;s2&quot;&gt;&amp;quot;mcaliman&amp;quot;&lt;/span&gt;
sudo git config --global user.email &lt;span class=&quot;s2&quot;&gt;&amp;quot;mcaliman@gmail.com&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;verifichiamo con&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git config --list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-installare-git/&quot;&gt;Ubuntu 14.04.02 LTS installare git&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on May 15, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Ubuntu 14.04.02 LTS abilitare l’utente root]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-abilitare-root/" />
  <id>http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-abilitare-root</id>
  <published>2015-05-14T00:45:33+02:00</published>
  <updated>2015-05-14T00:45:33+02:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Parte della disumanità del computer sta nel fatto che, una volta programmato e messo in funzione, si comporta in maniera perfettamente onesta. &lt;em&gt;(Isaac Asimov, Il vento è cambiato, 1983)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Per default è l’utente root su ubuntu è disabilitato, non vi sono particolari ragioni per attivarlo dato che è possibile ricorrere in modo più sicuro con il comando sudio. Se proprio vogliamo abilarlo creiamo la sua password per la prima volta con&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo passwd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;potremo così diventare root con&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su root&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-abilitare-root/&quot;&gt;Ubuntu 14.04.02 LTS abilitare l’utente root&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on May 14, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Ubuntu 14.04.02 LTS 64bit installare Open SSH]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-install-openssh/" />
  <id>http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-install-openssh</id>
  <published>2015-05-13T00:45:33+02:00</published>
  <updated>2015-05-13T00:45:33+02:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Parte della disumanità del computer sta nel fatto che, una volta programmato e messo in funzione, si comporta in maniera perfettamente onesta. &lt;em&gt;(Isaac Asimov, Il vento è cambiato, 1983)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;L’installazione delle applicazioni server e client di OpenSSH è semplice. Per installare l’applicazione client OpenSSH sui sistemi Ubuntu, usare questo comando al prompt di un terminale:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install openssh-client&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Per installare l’applicazione server di OpenSSH e i relativi file di supporto, usare questo comando al prompt di un terminale:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install openssh-server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Se il DHC ci assegna ogni volta un IP diverso o semplicemente non ci è mai passato per la testa di dover sapere questo particolare sul nostro server casalingo dobbiamo per forza recuperarlo, a questo scopo utilizziamo il comando&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ifconfig&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Non è necessario essere root e quindi l’uso di sudo per utilizzarlo
ricaviamo l’ip: 192.168.1.23&lt;/p&gt;

&lt;p&gt;possiamo quindi provare a collegarci da un altra macchina con &lt;code&gt;ssh &amp;lt;username&amp;gt;@&amp;lt;hostip&amp;gt;&lt;/code&gt;
nel mio caso&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh mcaliliman@192.168.1.23&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;per uscire il solito comando&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/ubuntu-14.04.02-LTS-install-openssh/&quot;&gt;Ubuntu 14.04.02 LTS 64bit installare Open SSH&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on May 13, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Abilitare il comando sudo su debian 8]]></title>
  <link rel="alternate" type="text/html" href="http://massimocaliman.it/articles/debian-8-abilitare-sudo/" />
  <id>http://massimocaliman.it/articles/debian-8-abilitare-sudo</id>
  <published>2015-05-02T00:45:33+02:00</published>
  <updated>2015-05-02T00:45:33+02:00</updated>
  <author>
    <name>Massimo Caliman</name>
    <uri>http://massimocaliman.it</uri>
    <email>mcaliman@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Parte della disumanità del computer sta nel fatto che, una volta programmato e messo in funzione, si comporta in maniera perfettamente onesta. &lt;em&gt;(Isaac Asimov, Il vento è cambiato, 1983)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ultimamente sto tornando ad apprezzare la distribuzione debian. Non ho smesso di essere un fan di ubuntu che uso per ogni cosa sia per il mio portatile personale che per i server di lavoro. La motivazione iniziale è stata piuttosto casuale: cercavo una distribuzione che fosse adatta al mio &lt;code&gt;HP Proliant ML110 G5&lt;/code&gt;. Il problema che si presentava con la &lt;code&gt;Ubuntu 14.04 LTS desktop&lt;/code&gt; era imputabile alla scheda grafica integrata sulla scheda madre, una &lt;code&gt;Matrox Graphics MGA G200 AGP&lt;/code&gt;. A quando pare di funzionare correttamente con la 14.04 desktop proprio non voleva saperne.  Le performance di gnome erano devastanti.&lt;/p&gt;

&lt;p&gt;Installata la &lt;code&gt;debian 8&lt;/code&gt; il problema non si è manifestato, ottime performance, ero abituato però ad usare il comando &lt;code&gt;sudo&lt;/code&gt; e di default la debian non lo ha, ne installato, ne attivato per l’utente principale creato in fase di installazione. Ottenere ogni volta i permessi necessari diventando &lt;code&gt;root&lt;/code&gt; era piuttosto fastidioso. Ecco quindi sotto le istruzioni per attivare sudo&lt;/p&gt;

&lt;p&gt;Per prima cosa diventiamo &lt;code&gt;root&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;su root&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;poi installiamo sudo&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;apt-get install sudo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;a questo punto modificare il fils &lt;code&gt;/etc/sudoers&lt;/code&gt; con il comando visudo aggiungendo&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;lt;username&amp;gt; &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ALL&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;nel mio caso&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mcaliman &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ALL&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;dopo la riga &lt;code&gt;#includedir /etc/sudoers.d&lt;/code&gt;. Ora potete utilizzare sudo come d’abitudine su ubuntu.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://massimocaliman.it/articles/debian-8-abilitare-sudo/&quot;&gt;Abilitare il comando sudo su debian 8&lt;/a&gt; was originally published by Massimo Caliman at &lt;a href=&quot;http://massimocaliman.it&quot;&gt;Massimo Caliman's&lt;/a&gt; on May 02, 2015.&lt;/p&gt;
  </content>
</entry>

</feed>