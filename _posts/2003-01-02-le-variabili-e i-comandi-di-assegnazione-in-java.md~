---
layout: post
title:  "Le variabili e i comandi di assegnazione"
date:   2003-01-02 22:45:33
tags: [Java]
image:
  feature: so-simple-sample-image-2.jpg
  credit: Michael Rose
  creditlink: http://mademistakes.com
comments: false
share: true
---

Diamo per prima cosa una definizione sufficientemente formale per i nostri scopi di variabile:
Definizione di variabile
Una variabile è una coppia composta da un nome, l'identificativo della variabile e un valore.

{% highlight java %}
T var = value ;
{% endhighlight %}

Le variabili di un programma memorizzano i dati che sono elaborati durante l'esecuzione.
Nel corso dell'esecuzione del programma i valori della variabile sono modificati (se no sarebbero delle costanti).
Le variabili nascono,vivono e muoiono, è compito nostro occuparci di loro,della loro vita,della loro visibilità (scope).
Trattiamole bene,diamogli un nome rispettabile in modo che non ci odino e ci faccia passare notti insonni.
Prima di essere usata una variabile deve essere dichiarata, la dichiarazione di una variabile è necessaria per riservare uno spazio
di memoria in cui scrivere il suo valore, la dichiarazione definisce il tipo della variabile.

{% highlight java %}
T var;
{% endhighlight %}

dove T è il tipo, per esempio **int** , double e altro.
Si possono avere come tipi, tipi di base che non sono oggetti oppure oggetti ( T diventa un nome di classe). 
Sotto riportiamo alcuni esempi di dichiarazione di variabile:

{% highlight java %}
int x ; double y ;
{% endhighlight %}

Posso anche assegnare un valore alla variabile:

{% highlight java %}
int x = 5 ; double y = 60 ;
{% endhighlight %}

Il tipo dei valori della variabile serve per stabilire quanta memoria riservare alla variabile, nel caso del tipo int sono 4 byte.
Se dovessimo rappresentare graficamente le dichiarazioni:

{% highlight java %}
int x = 0 ; 
int y = 2 ; 
int z ; 
{% endhighlight %}

x 0 y 2 z -

dove - indica che z è stato dichiarato ma non inizializzato cioè non gli è stato assegnato un valore.

Diamo ora una definizione sufficientemente formale ai nostri scopi di un comandi di assegnazione.

Definizione di comando di assegnazione

Un comando di assegnazione è un'istruzione avente lo scopo di modificare il valore di una variabile.
Si aggiunga anche di assegnare un valore ad una variabile che era solo stata dichiarata e che quindi aveva valore indefinito.

{% highlight java %}
var = expr;
{% endhighlight %}

Dove var è il nome della variabile e expr una espressione il cui tipo è compatibile con il tipo di var.
Il comando ha l'effetto di sostituire il valore della variabile il cui nome compare a sinistra (left-value) del segno di uguaglianza 
con il valore che compare a destra.
Per espressioni si intende un'entità sintattica composta da nomi di variabili, costanti e segni di operazioni 
per stabilire l'ordine di valutazione degli operandi.

{% highlight java %}
x = 12;
{% endhighlight %}



Definizione
Qualora tanto il tipo della variabile quanto il tipo dell' espressione rappresentino dati numerici e il tipo di expr è sottoinsieme 
del tipo di var prima dell' assegnazione avviene una conversione automatica detta promozione.
Per esempio:

{% highlight java %}
int i ; 
byte j ; 
i = j ;
{% endhighlight %}

Diamo ora invece una definizione di casting:

Definizione

Se il tipo di var e tipo di expr prevedono valori comuni ( tipicamente TypeOf (expr ) sottoinsieme TypeOf (var)) si può pensare la 
conversione esplicita detta casting cioè : TypeOf(expr) --> TypeOf(var). Questo se i valori numerici sono corretti e compatibili.

Per esempio:

{% highlight java %}
int i; 
byte j; 
j = (byte) i;
{% endhighlight %}

è corretto solo se i è minore o uguale del valore massimo disponibile per byte.
